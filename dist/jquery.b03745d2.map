{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","element","document","querySelectorAll","Array","addClass","className","i","length","classList","add","each","fn","call","parent","array","node","push","parentNode","print","console","log","children","find","selector","newElements","from","concat","oldApi","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,GAAgB,UAASC,eAAT,EAA0B;AACtC,QAAIC,gBAAJ;AACA,QAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrCC,kBAAUC,SAASC,gBAAT,CAA0BH,eAA1B,CAAV;AACH,KAFD,MAEO,IAAIA,2BAA2BI,KAA/B,EAAsC;AACzCH,kBAAUD,eAAV;AACH;AACD,WAAO;AAAE;AACL;;AAEAK,gBAHG,oBAGMC,SAHN,EAGiB;AAChB,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,QAAQO,MAA5B,EAAoCD,GAApC,EAAyC;AACrCN,wBAAQM,CAAR,EAAWE,SAAX,CAAqBC,GAArB,CAAyBJ,SAAzB;AACH;AACD,mBAAO,IAAP,CAJgB,CAIH;AAChB,SARE;AASHK,YATG,gBASEC,EATF,EASM;AACL,iBAAK,IAAIL,IAAI,CAAb,EAAgBA,IAAIN,QAAQO,MAA5B,EAAoCD,GAApC,EAAyC;AACrCK,mBAAGC,IAAH,CAAQ,IAAR,EAAcZ,QAAQM,CAAR,CAAd;AACH;AACD,mBAAO,IAAP;AACH,SAdE;AAeHO,cAfG,oBAeM;AACL,gBAAMC,QAAQ,EAAd;AACA,iBAAKJ,IAAL,CAAU,UAACK,IAAD,EAAU;AAChBD,sBAAME,IAAN,CAAWD,KAAKE,UAAhB;AACH,aAFD;AAGA,mBAAOnB,OAAOgB,KAAP,CAAP;AACH,SArBE;AAsBHI,aAtBG,mBAsBK;AACJC,oBAAQC,GAAR,CAAYpB,OAAZ;AACH,SAxBE;AAyBHqB,gBAzBG,sBAyBQ;AACP,gBAAMP,QAAQ,EAAd;AACA,iBAAKJ,IAAL,CAAU,UAACK,IAAD,EAAU;AAChBD,sBAAME,IAAN,iCAAcD,KAAKM,QAAnB,GADgB,CACa;AAEhC,aAHD;AAIA,mBAAOvB,OAAOgB,KAAP,CAAP;AACH,SAhCE;AAiCHQ,YAjCG,gBAiCEC,QAjCF,EAiCY;AACX,gBAAIT,QAAQ,EAAZ;AACA,iBAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIN,QAAQO,MAA5B,EAAoCD,GAApC,EAAyC;AACrC;AACA,oBAAMkB,cAAcrB,MAAMsB,IAAN,CAAWzB,QAAQM,CAAR,EAAWJ,gBAAX,CAA4BqB,QAA5B,CAAX,CAApB;AACAT,wBAAQA,MAAMY,MAAN,CAAaF,WAAb,CAAR;AACH;AACDV,kBAAMa,MAAN,GAAe,IAAf,CAPW,CAOU;AACrB,mBAAO7B,OAAOgB,KAAP,CAAP,CARW,CAQW;AACzB,SA1CE;;AA2CHa,gBAAQ5B,gBAAgB4B,MA3CrB;AA4CHC,WA5CG,iBA4CG;AACF,mBAAO,KAAKD,MAAZ,CADE,CACkB;AACvB;AA9CE,KAAP;AAiDH,CAxDD","file":"jquery.b03745d2.map","sourceRoot":"..\\src","sourcesContent":["window.jQuery = function(selectorOrArray) {\r\n    let element\r\n    if (typeof selectorOrArray === \"string\") {\r\n        element = document.querySelectorAll(selectorOrArray);\r\n    } else if (selectorOrArray instanceof Array) {\r\n        element = selectorOrArray;\r\n    }\r\n    return { //返回的这个对象统称为API\r\n        // 这里的addClass和外部element变量形成了闭包\r\n\r\n        addClass(className) {\r\n            for (let i = 0; i < element.length; i++) {\r\n                element[i].classList.add(className);\r\n            }\r\n            return this; //调用addClass()的对象就是API，所以再把API返回，就可以链式操作了\r\n        },\r\n        each(fn) {\r\n            for (let i = 0; i < element.length; i++) {\r\n                fn.call(null, element[i]);\r\n            }\r\n            return this;\r\n        },\r\n        parent() {\r\n            const array = [];\r\n            this.each((node) => {\r\n                array.push(node.parentNode);\r\n            })\r\n            return jQuery(array);\r\n        },\r\n        print() {\r\n            console.log(element);\r\n        },\r\n        children() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(...node.children) //node.children是一个数组，...扩展运算符，可以把数组的每个元素拆分出来\r\n\r\n            })\r\n            return jQuery(array)\r\n        },\r\n        find(selector) {\r\n            let array = [];\r\n            for (let i = 0; i < element.length; i++) {\r\n                //把获得元素连接起来\r\n                const newElements = Array.from(element[i].querySelectorAll(selector));\r\n                array = array.concat(newElements);\r\n            }\r\n            array.oldApi = this; //this指的是前一个对象调用jQury()返回的API，相当于上一个API\r\n            return jQuery(array); //把当前array的引用赋值给element，这样API这个对象操作就是array里面的元素了\r\n        },\r\n        oldApi: selectorOrArray.oldApi,\r\n        end() {\r\n            return this.oldApi; //当前API里面保存了上一次API的引用，这里返回上一次API的引用就相当于返回上一个被操作的元素对象\r\n        }\r\n\r\n    }\r\n}"]}